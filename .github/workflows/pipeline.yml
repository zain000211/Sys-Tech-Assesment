name: CI/CD Java App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17

      - name: Build with Maven
        working-directory: ./java-app
        run: mvn clean package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract Repository URI
        id: ecr
        run: |
          echo "REPOSITORY_URI=$(aws ecr describe-repositories --repository-names your-app --query 'repositories[0].repositoryUri' --output text)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t ${{ env.REPOSITORY_URI }}:latest ./java-app

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ env.REPOSITORY_URI }}:latest


  deploy:
    name: Deploy Application with Helm
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name java-eks-cluster --kubeconfig ./kubeconfig.yaml
  
      - name: Deploy Application with Helm
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
        run: |
          helm upgrade --install your-release-name ./helm-chart \
            --namespace your-namespace \
            --create-namespace \
            --set image.repository=${{ env.REPOSITORY_URI }} \
            --set image.tag=latest